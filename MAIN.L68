00001528 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 10/12/2024 6:22:29 PM

00001000                             1          org     $1000
00001000                             2  
00001000                             3  bm:
00001000= 00FF0000 00FF0000 ...      4          dc.l    $00ff0000, $00ff0000, $00ff0000, $00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000
00001058= 00FF0000 00FF0000 ...      5          dc.l    $00ff0000, $00ff0000, $00ff0000, $00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000
000010B0= 00FF0000 00FF0000 ...      6          dc.l    $00ff0000, $00ff0000, $00ff0000, $00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000
00001108= 00FF0000 00FF0000 ...      7          dc.l    $00ff0000, $00ff0000, $00ff0000, $00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000
00001160= 00FF0000 00FF0000 ...      8          dc.l    $00ff0000, $00ff0000, $00ff0000, $00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000,$00ff0000
000011B8                             9  
000011B8= 0000FF00 0000FF00 ...     10          dc.l    $0000ff00, $0000ff00, $0000ff00, $0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00
00001210= 0000FF00 0000FF00 ...     11          dc.l    $0000ff00, $0000ff00, $0000ff00, $0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00
00001268= 0000FF00 0000FF00 ...     12          dc.l    $0000ff00, $0000ff00, $0000ff00, $0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00
000012C0= 0000FF00 0000FF00 ...     13          dc.l    $0000ff00, $0000ff00, $0000ff00, $0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00
00001318= 0000FF00 0000FF00 ...     14          dc.l    $0000ff00, $0000ff00, $0000ff00, $0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00,$0000ff00
00001370                            15  
00001370= 000000FF 000000FF ...     16          dc.l    $000000ff, $000000ff, $000000ff, $000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff
000013C8= 000000FF 000000FF ...     17          dc.l    $000000ff, $000000ff, $000000ff, $000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff
00001420= 000000FF 000000FF ...     18          dc.l    $000000ff, $000000ff, $000000ff, $000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff
00001478= 000000FF 000000FF ...     19          dc.l    $000000ff, $000000ff, $000000ff, $000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff
000014D0= 000000FF 000000FF ...     20          dc.l    $000000ff, $000000ff, $000000ff, $000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff,$000000ff
00001528                            21  
00001528                            22  
00001528                            23  start:
00001528                            24          ; drawbm subroutine call
00001528  2F3C 00001000             25          move.l  #bm, -(a7)                      ; bitmap address
0000152E  3F3C 000F                 26          move.w  #15, -(a7)                       ; height
00001532  3F3C 0016                 27          move.w  #22, -(a7)                       ; width
00001536  3F3C 0000                 28          move.w  #0, -(a7)                       ; y pos
0000153A  3F3C 0000                 29          move.w  #0, -(a7)                       ; x pos
0000153E  4EB9 0000154E             30          jsr     drawbm
00001544  9EFC 000C                 31          sub     #12, a7                         ; pop stack
00001548                            32  
00001548                            33          ; halt simulator
00001548  103C 0009                 34          move.b  #9, d0
0000154C  4E4F                      35          trap    #15
0000154E                            36  
0000154E                            37  drawbm:
0000154E                            38  ; arguments:
0000154E                            39  ;       0 -> x pos (d0)
0000154E                            40  ;       1 -> y pos (d1)
0000154E                            41  ;       2 -> width (d2)
0000154E                            42  ;       3 -> height (d3)
0000154E                            43  ;       4 -> bitmap address high word (a0)
0000154E                            44  ;       5 -> bitmap address low word (a0)
0000154E  48A7 FE00                 45          movem.w d0-d6, -(a7)
00001552  2F08                      46          move.l  a0, -(a7)
00001554                            47  
00001554                            48          ; get subroutine arguments
00001554  4CAF 001F 0016            49          movem.w 22(a7), d0-d4
0000155A  206F 001E                 50          move.l  30(a7), a0
0000155E                            51  
0000155E                            52          ; store x, y for later use
0000155E  3803                      53          move.w  d3, d4
00001560  3602                      54          move.w  d2, d3
00001562  3A00                      55          move.w  d0, d5                          ; d5 -> x pos
00001564  3C01                      56          move.w  d1, d6                          ; d6 -> y pos
00001566                            57  .draw:
00001566                            58          ; set pen color
00001566  103C 0050                 59          move.b  #80, d0
0000156A  2218                      60          move.l  (a0)+, d1
0000156C                            61          ; btst.l  #25, d1                         ; check if higher byte is set (draw only if set)
0000156C                            62          ; beq     .itrx
0000156C                            63          ; andi.l  #$00ffffff, d1                  ; unless the higher byte is set to 0, the colour is not displayed correctly
0000156C  4E4F                      64          trap    #15
0000156E                            65  
0000156E                            66          ; draw pixel
0000156E  103C 0052                 67          move.b  #82, d0
00001572  3205                      68          move.w  d5, d1
00001574  3406                      69          move.w  d6, d2
00001576  4E4F                      70          trap    #15
00001578                            71  .itrx:
00001578                            72          ; iterate through every column
00001578  5245                      73          addq.w  #1, d5
0000157A  B645                      74          cmp.w   d5, d3
0000157C  66E8                      75          bne     .draw
0000157E  3A3C 0000                 76          move.w  #0, d5
00001582                            77  .itry:
00001582                            78          ; iterate throught every row
00001582  5246                      79          addq.w  #1, d6
00001584  B846                      80          cmp.w   d6, d4
00001586  66DE                      81          bne     .draw
00001588                            82  
00001588  205F                      83          move.l  (a7)+, a0
0000158A  4C9F 007F                 84          movem.w (a7)+, d0-d6
0000158E  4E75                      85          rts
00001590                            86  
00001590                            87          end     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BM                  1000
DRAWBM              154E
DRAWBM:DRAW         1566
DRAWBM:ITRX         1578
DRAWBM:ITRY         1582
START               1528
